// Code generated by MockGen. DO NOT EDIT.
// Source: divvy-go-app/service (interfaces: Service)

// Package mock is a generated GoMock package.
package mock

import (
	mongodb "divvy-go-app/internals/mongodb"
	service "divvy-go-app/service"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockService) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockServiceMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockService)(nil).Close))
}

// GetDemoService mocks base method.
func (m *MockService) GetDemoService() service.DemoService {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDemoService")
	ret0, _ := ret[0].(service.DemoService)
	return ret0
}

// GetDemoService indicates an expected call of GetDemoService.
func (mr *MockServiceMockRecorder) GetDemoService() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDemoService", reflect.TypeOf((*MockService)(nil).GetDemoService))
}

// MongoDB mocks base method.
func (m *MockService) MongoDB() mongodb.MongoDB {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MongoDB")
	ret0, _ := ret[0].(mongodb.MongoDB)
	return ret0
}

// MongoDB indicates an expected call of MongoDB.
func (mr *MockServiceMockRecorder) MongoDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MongoDB", reflect.TypeOf((*MockService)(nil).MongoDB))
}
